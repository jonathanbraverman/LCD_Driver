#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                         ; outside this module
        EXTERN  SETUPSPI
        EXTERN  CREATEMESSAGE
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

      bis.b  #BIT3, &P1REN
      mov.b #0, &P1OUT
;  //P1DIR |= BIT0 + BIT5;                     //
      CALL  #SETUPSPI
      
MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        

main:   NOP                             ; main program


        mov.b   #0xA5, R8       ;                    // Transmit first character        
        call   #CREATEMESSAGE

        mov.b   #0xB6, R8       ;                    // Transmit first character        
        call   #CREATEMESSAGE

        mov.b   #0xC7, R8       ;                    // Transmit first character        
        call   #CREATEMESSAGE

        mov.b   #0xD8, R8       ;                    // Transmit first character        
        call   #CREATEMESSAGE

        
        
        JMP $                          ; jump to current location '$'
                                        ; (endless loop)
                                        
                                        
                                        
               
               
ALTSETUPSPI
      mov.b #BIT5 + BIT7, &P1SEL
      mov.b #BIT5 + BIT7, &P1SEL2
      bis.b #UCCKPL + UCMSB + UCMST + UCSYNC, &UCB0CTL0  ;// 3-pin, 8-bit SPI master 
      bis.b #UCSSEL_2, UCB0CTL1       ;              // SMCLK
      mov.b #0x02, &UCB0BR0          ;                // /2
      mov.b #0, &UCB0BR1            ;                   //
      bic.b #UCSWRST, &UCB0CTL1   ;                  // **Initialize USCI state machine**
  


       ret
       
        END
